[versions]
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
# Core
composeMarkdown = "0.2.6"
kotlin = "2.1.0"
compose-plugin = "1.8.2"
decompose ="3.3.0"
lifecycle-coroutines ="2.5.0"
icons = "1.7.2"
# Android (не используется сейчас, но полезно для будущего)
agp = "8.9.1"
androidx-core = "1.17.0"
androidx-activity = "1.8.2"
androidx-lifecycle = "2.9.3"
ksp = "2.1.0-1.0.29"
# Libraries
ktor = "3.1.3"
richeditorCompose = "1.0.0-rc04"
room = "2.7.2"
sqlite-bundled = "2.5.2"
kotlinx-serialization = "1.7.3"
kotlinx-coroutines = "1.9.0"
kotlinx-datetime = "0.6.2"
uuid = "0.8.4"
# Logging
logback = "1.4.14"
#koin
koin = "4.0.4"

junit = "5.10.2"
truth = "1.1.4"
mockk = "1.14.5"
kotlinx-coroutines-test = "1.7.3"
security-crypto = "1.1.0"
datastore-preferences = "1.1.7"
selenium = "4.21.0"
jsoup = "1.17.2"
kermit = "2.0.4"
keytarJava = "1.0.0"
multiplatform-settings = "1.3.0"
okio = "3.9.0"
nirmato-ollama = "0.2.0"
kover = "0.8.3"

[libraries]
# Ktor for networking
compose-markdown = { module = "com.github.jeziellago:compose-markdown", version.ref = "composeMarkdown" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
compose-material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "icons" }

# --- ROOM ---
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
richeditor-compose = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "richeditorCompose" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite-bundled" }

# --- DECOMPOSE ---
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
lifecycle-coroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "lifecycle-coroutines" }

# --- KOIN ---
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }

# --- Android ---
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore-preferences" }
androidx-security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "security-crypto" }

# --- KTOR ---
ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

selenium-java = { module = "org.seleniumhq.selenium:selenium-java", version.ref = "selenium" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# --- TESTING ---
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
mockk-common = { module = "io.mockk:mockk", version.ref = "mockk" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }

# Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
russhwolf-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
russhwolf-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform-settings" }
russhwolf-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
# --- ДРУГИЕ ---
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
keytar-java = { module = "com.starxg:java-keytar", version.ref = "keytarJava" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
nirmato-ollama-client = { module = "org.nirmato.ollama:nirmato-ollama-client-ktor", version.ref = "nirmato-ollama" }

[plugins]
# Core plugins
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
# Android (не используется сейчас, но полезно для будущего)
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }